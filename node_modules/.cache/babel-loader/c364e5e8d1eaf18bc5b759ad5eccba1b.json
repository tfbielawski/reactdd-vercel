{"ast":null,"code":"import _slicedToArray from\"/home/trollhero/MEGAsync/Lambda/reactdd-vercel/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{Container,Dimmer,Loader}from\"semantic-ui-react\";import\"./App.css\";import Navbar from\"./components/Navbar\";import Home from\"./components/Home\";import Monster from\"./components/Monster\";import axios from\"axios\";import Classes from\"./components/Classes\";//Main function definition\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){//declare and init monster state\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),monster=_useState2[0],setMonster=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];//Declare and init character classes state\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),classes=_useState6[0],setClasses=_useState6[1];//const [classesLoading, setClassesLoading] = useState(true);\nvar isRendered=useRef(false);useEffect(function(){isRendered=true;//Axios gets monster data from the api\naxios.get(\"https://www.dnd5eapi.co/api/monsters/\").then(function(res){//Invoke setData() to set the data\nsetMonster(res.data.results);console.log(\"MONSTER.RESULTS\",res.data.results);//Generate a random number to randomly choose a monster\nvar randomNumber=Math.floor(Math.random()*330);//Assign the index to a variable\nvar monsterName=res.data.results[\"\".concat(randomNumber)].index;axios.get(\"https://www.dnd5eapi.co/api/monsters/\".concat(monsterName)).then(function(res){console.log(\"AXIOS 2: \",res.data);if(isRendered){setMonster(res.data);}return null;//Set loading to false\nsetLoading(false);});})//Catch() function\n.catch(function(err){return console.log(\"There was an error. Fix your code!\"+err);});return function(){isRendered=false;};//Axios gets character class data from the api\n//empty array to prevent infinite calls\n},[]);//useEffect to call classes\nuseEffect(function(){isRendered=true;//Axios gets monster data from the api\naxios.get(\"https://www.dnd5eapi.co/api/classes/\").then(function(res){//Invoke setData() to set the data\nsetClasses(res.data.results);console.log(\"CLASSES.RESULTS\",res.data.results);//Generate a random number to randomly choose a monster\nvar randomNumber=Math.floor(Math.random()*12);//Assign the index to a variable\nvar classesName=res.data.results[\"\".concat(randomNumber)].index;console.log(\"CLASSES.INDEX\",res.data.results[\"\".concat(randomNumber)].index);axios.get(\"https://www.dnd5eapi.co/api/classes/\".concat(classesName)).then(function(res){console.log(\"AXIOS 2classes: \",res.data);if(isRendered){setClasses(res.data);}//Set loading to false\nsetLoading(false);});})//Catch() function\n.catch(function(err){return console.log(\"There was an error. Fix your code!\"+err);});return function(){isRendered=false;};//Axios gets character class data from the api\n//empty array to prevent infinite calls\n},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Container,{children:loading?/*#__PURE__*/ //Show the loading screen\n_jsx(Dimmer,{active:true,inverted:true,children:/*#__PURE__*/_jsx(Loader,{inverted:true,children:\" LOADING...\"})}):/*#__PURE__*/ //Else, access the switch\n_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/monster\",children:/*#__PURE__*/_jsx(Monster,{data:monster})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/classes\",children:/*#__PURE__*/_jsx(Classes,{data:classes})})]})})]})});}export default App;","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/App.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Switch","Route","Container","Dimmer","Loader","Navbar","Home","Monster","axios","Classes","App","monster","setMonster","loading","setLoading","classes","setClasses","isRendered","get","then","res","data","results","console","log","randomNumber","Math","floor","random","monsterName","index","catch","err","classesName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Monster from \"./components/Monster\";\nimport axios from \"axios\";\nimport Classes from \"./components/Classes\";\n\n//Main function definition\nfunction App() {\n    //declare and init monster state\n    const [monster, setMonster] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    //Declare and init character classes state\n    const [classes, setClasses] = useState([]);\n    //const [classesLoading, setClassesLoading] = useState(true);\n\n    let isRendered = useRef(false);\n    useEffect(() => {\n        isRendered = true;\n        //Axios gets monster data from the api\n        axios\n            .get(\"https://www.dnd5eapi.co/api/monsters/\")\n            .then((res) => {\n                //Invoke setData() to set the data\n                setMonster(res.data.results);\n                console.log(\"MONSTER.RESULTS\", res.data.results);\n                //Generate a random number to randomly choose a monster\n                var randomNumber = Math.floor(Math.random() * 330);\n                //Assign the index to a variable\n                const monsterName = res.data.results[`${randomNumber}`].index;\n\n                axios\n                    .get(`https://www.dnd5eapi.co/api/monsters/${monsterName}`)\n                    .then((res) => {\n                        console.log(\"AXIOS 2: \", res.data);\n                        if (isRendered) {\n                            setMonster(res.data);\n                        }\n                        return null;\n                        //Set loading to false\n                        setLoading(false);\n                    });\n            })\n\n            //Catch() function\n            .catch((err) => console.log(\"There was an error. Fix your code!\" + err));\n\n        return () => {\n            isRendered = false;\n        };\n\n        //Axios gets character class data from the api\n        //empty array to prevent infinite calls\n    }, []);\n\n    //useEffect to call classes\n    useEffect(() => {\n        isRendered = true;\n        //Axios gets monster data from the api\n        axios\n            .get(\"https://www.dnd5eapi.co/api/classes/\")\n            .then((res) => {\n                //Invoke setData() to set the data\n                setClasses(res.data.results);\n                console.log(\"CLASSES.RESULTS\", res.data.results);\n                //Generate a random number to randomly choose a monster\n                var randomNumber = Math.floor(Math.random() * 12);\n                //Assign the index to a variable\n                const classesName = res.data.results[`${randomNumber}`].index;\n                console.log(\"CLASSES.INDEX\", res.data.results[`${randomNumber}`].index);\n                axios\n                    .get(`https://www.dnd5eapi.co/api/classes/${classesName}`)\n                    .then((res) => {\n                        console.log(\"AXIOS 2classes: \", res.data);\n                        if (isRendered) {\n                            setClasses(res.data);\n                        }\n                        //Set loading to false\n                        setLoading(false);\n                    });\n            })\n\n            //Catch() function\n            .catch((err) => console.log(\"There was an error. Fix your code!\" + err));\n\n        return () => {\n            isRendered = false;\n        };\n\n        //Axios gets character class data from the api\n        //empty array to prevent infinite calls\n    }, []);\n\n    return (\n        <>\n            <Router>\n                {/* Render the NavBar component here */}\n                <Navbar />\n                <Container>\n                    {/*Ternary Loading indicator. If loading is true...*/}\n                    {loading ? (\n                        //Show the loading screen\n                        <Dimmer active inverted>\n                            <Loader inverted> LOADING...</Loader>\n                        </Dimmer>\n                    ) : (\n                        //Else, access the switch\n                        <Switch>\n                            {/*Route to home component*/}\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            {/*Route to people component,pass in classes as props*/}\n                            <Route exact path=\"/monster\">\n                                <Monster data={monster} />\n                            </Route>\n                            {/*Route to classes component*/}\n                            <Route exact path=\"/classes\">\n                                <Classes data={classes} />\n                            </Route>\n                        </Switch>\n                    )}\n                </Container>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}