{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/components/Monster.js\";\nimport React from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\"; //ToDo\n//make cards more informative\n//add races\n//add \"get\" buttons\n//create export qetAMonster()- it contains axios calls\n//useEffect(()=>{},[monster])\n//onClick={()=>getAMoster()}\n//Monster function definition, pass in data from App.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Monster(data) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Monster \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Refresh to get a new monster! (button coming soon)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: data.data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ALIGNMENT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.alignment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"TYPE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SIZE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: data.data.size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"SPECIAL ABILITIES\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), data.data.special_abilities ? data.data.special_abilities.map((sa, i) => {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", sa.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", sa.desc]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 71\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"None\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Click Refresh to Get a New Monster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Monster;\n\nvar _c;\n\n$RefreshReg$(_c, \"Monster\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/components/Monster.js"],"names":["React","Card","Grid","Monster","data","name","alignment","type","size","special_abilities","map","sa","i","desc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAClC,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAA,6BAGI,QAAC,IAAD,CAAM,MAAN;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD;AAAA,iCAEI,QAAC,IAAD,CAAM,OAAN;AAAA,oCACI,QAAC,IAAD,CAAM,MAAN;AAAA,wBAAcA,IAAI,CAACA,IAAL,CAAUC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,IAAD,CAAM,WAAN;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,0BAAID,IAAI,CAACA,IAAL,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAA,0BAAIF,IAAI,CAACA,IAAL,CAAUG;AAAd;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,eAMI;AAAA,0BAAIH,IAAI,CAACA,IAAL,CAAUI;AAAd;AAAA;AAAA;AAAA;AAAA,sBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,EASKJ,IAAI,CAACA,IAAL,CAAUK,iBAAV,GACGL,IAAI,CAACA,IAAL,CAAUK,iBAAV,CAA4BC,GAA5B,CAAgC,CAACC,EAAD,EAAKC,CAAL,KAAW;AACvC,uBAAO,aAAC;AAAA,kCAAKD,EAAE,CAACN,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAD,eAAuB;AAAA,kCAAKM,EAAE,CAACE,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA9B;AACH,eAFD,CADH,gBAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdR,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqCH;KAtCuBV,O","sourcesContent":["import React from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\";\n\n//ToDo\n//make cards more informative\n//add races\n//add \"get\" buttons\n//create export qetAMonster()- it contains axios calls\n//useEffect(()=>{},[monster])\n//onClick={()=>getAMoster()}\n\n//Monster function definition, pass in data from App.js\nexport default function Monster(data) {\n    return (\n        <>\n            <Grid columns={3}>\n                {/* Map over data passed in from App.js\n                For each monster in data, return a grid card*/}\n                <Grid.Column>\n                    <h1> Monster </h1>\n                    {/*<button> GET MONSTER </button>*/}\n                    <p> Refresh to get a new monster! (button coming soon)</p>\n                    <Card>\n                        {/*Add comments for each card type*/}\n                        <Card.Content>\n                            <Card.Header>{data.data.name}</Card.Header>\n                            <Card.Description>\n                                <strong>ALIGNMENT</strong>\n                                <p>{data.data.alignment}</p>\n                                <strong>TYPE</strong>\n                                <p>{data.data.type}</p>\n                                <strong>SIZE</strong>\n                                <p>{data.data.size}</p>\n                                <strong>SPECIAL ABILITIES</strong>\n                                {/*Map over special abilities array, populate*/}\n                                {data.data.special_abilities ? (\n                                    data.data.special_abilities.map((sa, i) => {\n                                        return (<p> {sa.name} </p>), (<p> {sa.desc}</p>);\n                                    })\n                                ) : (\n                                    <p>None</p>\n                                )}\n                                <strong>Click Refresh to Get a New Monster</strong>\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}