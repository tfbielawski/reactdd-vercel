{"ast":null,"code":"import React from\"react\";import{Card,Grid}from\"semantic-ui-react\";//indent, align, comments, consoles\n//make cards more informative\n//add races\n//add \"get\" buttons\n//create export qgetAMonster()- it contains axios calls\n//useEffect(()=>{},[monster])\n//onClick={()=>getAMoster()}\n//Monster function definition, pass in data from App.js\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Monster(data){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Monster \"}),/*#__PURE__*/_jsx(\"button\",{children:\" GET MONSTER \"}),/*#__PURE__*/_jsx(Grid,{columns:3,children:/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Content,{children:[/*#__PURE__*/_jsx(Card.Header,{children:data.data.name}),/*#__PURE__*/_jsxs(Card.Description,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ALIGNMENT\"}),/*#__PURE__*/_jsx(\"p\",{children:data.data.alignment}),/*#__PURE__*/_jsx(\"strong\",{children:\"TYPE\"}),/*#__PURE__*/_jsx(\"p\",{children:data.data.type}),/*#__PURE__*/_jsx(\"strong\",{children:\"SIZE\"}),/*#__PURE__*/_jsx(\"p\",{children:data.data.size}),/*#__PURE__*/_jsx(\"strong\",{children:\"SPECIAL ABILITIES\"}),data.data.special_abilities?data.data.special_abilities.map(function(sa,i){return/*#__PURE__*/_jsxs(\"p\",{children:[\" \",sa.name,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",sa.desc]});}):/*#__PURE__*/_jsx(\"p\",{children:\"None\"})]})]})})})})]});}","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/components/Monster.js"],"names":["React","Card","Grid","Monster","data","name","alignment","type","size","special_abilities","map","sa","i","desc"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,KAA2B,mBAA3B,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;6IACA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,IAAjB,CAAuB,CAClC,mBACI,wCACI,iCADJ,cAEI,yCAFJ,cAGI,KAAC,IAAD,EAAM,OAAO,CAAE,CAAf,uBAGI,KAAC,IAAD,CAAM,MAAN,wBACI,KAAC,IAAD,wBAEI,MAAC,IAAD,CAAM,OAAN,yBACI,KAAC,IAAD,CAAM,MAAN,WAAcA,IAAI,CAACA,IAAL,CAAUC,IAAxB,EADJ,cAEI,MAAC,IAAD,CAAM,WAAN,yBACI,qCADJ,cAEI,mBAAID,IAAI,CAACA,IAAL,CAAUE,SAAd,EAFJ,cAGI,gCAHJ,cAII,mBAAIF,IAAI,CAACA,IAAL,CAAUG,IAAd,EAJJ,cAKI,gCALJ,cAMI,mBAAIH,IAAI,CAACA,IAAL,CAAUI,IAAd,EANJ,cAOI,6CAPJ,CASKJ,IAAI,CAACA,IAAL,CAAUK,iBAAV,CACGL,IAAI,CAACA,IAAL,CAAUK,iBAAV,CAA4BC,GAA5B,CAAgC,SAACC,EAAD,CAAKC,CAAL,CAAW,CACvC,MAAO,aAAC,yBAAKD,EAAE,CAACN,IAAR,OAAD,cAAuB,yBAAKM,EAAE,CAACE,IAAR,GAA9B,CACH,CAFD,CADH,cAKG,2BAdR,GAFJ,GAFJ,EADJ,EAHJ,EAHJ,GADJ,CAmCH","sourcesContent":["import React from \"react\";\nimport { Card, Grid } from \"semantic-ui-react\";\n//indent, align, comments, consoles\n//make cards more informative\n//add races\n//add \"get\" buttons\n//create export qgetAMonster()- it contains axios calls\n//useEffect(()=>{},[monster])\n//onClick={()=>getAMoster()}\n\n//Monster function definition, pass in data from App.js\nexport default function Monster(data) {\n    return (\n        <>\n            <h1> Monster </h1>\n            <button> GET MONSTER </button>\n            <Grid columns={3}>\n                {/* Map over data passed in from App.js\n                   For each monster in data, return a grid card*/}\n                <Grid.Column>\n                    <Card>\n                        {/*Add comments for each card type*/}\n                        <Card.Content>\n                            <Card.Header>{data.data.name}</Card.Header>\n                            <Card.Description>\n                                <strong>ALIGNMENT</strong>\n                                <p>{data.data.alignment}</p>\n                                <strong>TYPE</strong>\n                                <p>{data.data.type}</p>\n                                <strong>SIZE</strong>\n                                <p>{data.data.size}</p>\n                                <strong>SPECIAL ABILITIES</strong>\n                                {/*Map over special abilities array, populate*/}\n                                {data.data.special_abilities ? (\n                                    data.data.special_abilities.map((sa, i) => {\n                                        return (<p> {sa.name} </p>), (<p> {sa.desc}</p>);\n                                    })\n                                ) : (\n                                    <p>None</p>\n                                )}\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                </Grid.Column>\n            </Grid>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}