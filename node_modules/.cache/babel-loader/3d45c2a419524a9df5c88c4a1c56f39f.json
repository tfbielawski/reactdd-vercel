{"ast":null,"code":"var _jsxFileName = \"/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Monster from \"./components/Monster\";\nimport axios from \"axios\";\nimport Classes from \"./components/Classes\"; //Main function definition\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //declare and init monster state\n  const [monster, setMonster] = useState([]);\n  const [loading, setLoading] = useState(true); //Declare and init character classes state\n\n  const [classes, setClasses] = useState([]); //const [classesLoading, setClassesLoading] = useState(true);\n\n  let isRendered = useRef(false);\n  useEffect(() => {\n    isRendered = true; //Axios gets monster data from the api\n\n    axios.get(\"https://www.dnd5eapi.co/api/monsters/\").then(res => {\n      //Invoke setData() to set the data\n      setMonster(res.data.results);\n      console.log(\"MONSTER.RESULTS\", res.data.results); //Generate a random number to randomly choose a monster\n\n      var randomNumber = Math.floor(Math.random() * 330); //Assign the index to a variable\n\n      const monsterName = res.data.results[`${randomNumber}`].index;\n      axios.get(`https://www.dnd5eapi.co/api/monsters/${monsterName}`).then(res => {\n        console.log(\"AXIOS 2: \", res.data);\n\n        if (isRendered) {\n          setMonster(res.data);\n        }\n\n        return null; //Set loading to false\n\n        setLoading(false);\n      });\n    }) //Catch() function\n    .catch(err => console.log(\"There was an error. Fix your code!\" + err));\n    return () => {\n      isRendered = false;\n    }; //Axios gets character class data from the api\n    //empty array to prevent infinite calls\n  }, []); //useEffect to call classes\n\n  useEffect(() => {\n    isRendered = true; //Axios gets monster data from the api\n\n    axios.get(\"https://www.dnd5eapi.co/api/classes/\").then(res => {\n      //Invoke setData() to set the data\n      setClasses(res.data.results);\n      console.log(\"CLASSES.RESULTS\", res.data.results); //Generate a random number to randomly choose a monster\n\n      var randomNumber = Math.floor(Math.random() * 12); //Assign the index to a variable\n\n      const classesName = res.data.results[`${randomNumber}`].index;\n      console.log(\"CLASSES.INDEX\", res.data.results[`${randomNumber}`].index); // axios\n      //     .get(`https://www.dnd5eapi.co/api/classes/${classesName}`)\n      //     .then((res) => {\n      //         console.log(\"AXIOS 2classes: \", res.data);\n      //         if (isRendered) {\n      //             setClasses(res.data);\n      //         }\n      //         //Set loading to false\n      //         setLoading(false);\n      //     });\n    }) //Catch() function\n    .catch(err => console.log(\"There was an error. Fix your code!\" + err));\n    return () => {\n      isRendered = false;\n    }; //Axios gets character class data from the api\n    //empty array to prevent infinite calls\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: loading ?\n        /*#__PURE__*/\n        //Show the loading screen\n        _jsxDEV(Dimmer, {\n          active: true,\n          inverted: true,\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            inverted: true,\n            children: \" LOADING...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n        //Else, access the switch\n        _jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/monster\",\n            children: /*#__PURE__*/_jsxDEV(Monster, {\n              data: monster\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/classes\",\n            children: /*#__PURE__*/_jsxDEV(Classes, {\n              data: classes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"xorP4/03ewVGeQIATKhOA+fgeAk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/trollhero/MEGAsync/Lambda/reactdd-vercel/src/App.js"],"names":["React","useState","useEffect","useRef","BrowserRouter","Router","Switch","Route","Container","Dimmer","Loader","Navbar","Home","Monster","axios","Classes","App","monster","setMonster","loading","setLoading","classes","setClasses","isRendered","get","then","res","data","results","console","log","randomNumber","Math","floor","random","monsterName","index","catch","err","classesName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Dimmer, Loader } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Monster from \"./components/Monster\";\nimport axios from \"axios\";\nimport Classes from \"./components/Classes\";\n\n//Main function definition\nfunction App() {\n    //declare and init monster state\n    const [monster, setMonster] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    //Declare and init character classes state\n    const [classes, setClasses] = useState([]);\n    //const [classesLoading, setClassesLoading] = useState(true);\n\n    let isRendered = useRef(false);\n    useEffect(() => {\n        isRendered = true;\n        //Axios gets monster data from the api\n        axios\n            .get(\"https://www.dnd5eapi.co/api/monsters/\")\n            .then((res) => {\n                //Invoke setData() to set the data\n                setMonster(res.data.results);\n                console.log(\"MONSTER.RESULTS\", res.data.results);\n                //Generate a random number to randomly choose a monster\n                var randomNumber = Math.floor(Math.random() * 330);\n                //Assign the index to a variable\n                const monsterName = res.data.results[`${randomNumber}`].index;\n\n                axios\n                    .get(`https://www.dnd5eapi.co/api/monsters/${monsterName}`)\n                    .then((res) => {\n                        console.log(\"AXIOS 2: \", res.data);\n                        if (isRendered) {\n                            setMonster(res.data);\n                        }\n                        return null;\n                        //Set loading to false\n                        setLoading(false);\n                    });\n            })\n\n            //Catch() function\n            .catch((err) => console.log(\"There was an error. Fix your code!\" + err));\n\n        return () => {\n            isRendered = false;\n        };\n\n        //Axios gets character class data from the api\n        //empty array to prevent infinite calls\n    }, []);\n\n    //useEffect to call classes\n    useEffect(() => {\n        isRendered = true;\n        //Axios gets monster data from the api\n        axios\n            .get(\"https://www.dnd5eapi.co/api/classes/\")\n            .then((res) => {\n                //Invoke setData() to set the data\n                setClasses(res.data.results);\n                console.log(\"CLASSES.RESULTS\", res.data.results);\n                //Generate a random number to randomly choose a monster\n                var randomNumber = Math.floor(Math.random() * 12);\n                //Assign the index to a variable\n                const classesName = res.data.results[`${randomNumber}`].index;\n                console.log(\"CLASSES.INDEX\", res.data.results[`${randomNumber}`].index);\n                // axios\n                //     .get(`https://www.dnd5eapi.co/api/classes/${classesName}`)\n                //     .then((res) => {\n                //         console.log(\"AXIOS 2classes: \", res.data);\n                //         if (isRendered) {\n                //             setClasses(res.data);\n                //         }\n                //         //Set loading to false\n                //         setLoading(false);\n                //     });\n            })\n\n            //Catch() function\n            .catch((err) => console.log(\"There was an error. Fix your code!\" + err));\n\n        return () => {\n            isRendered = false;\n        };\n\n        //Axios gets character class data from the api\n        //empty array to prevent infinite calls\n    }, []);\n\n    return (\n        <>\n            <Router>\n                {/* Render the NavBar component here */}\n                <Navbar />\n                <Container>\n                    {/*Ternary Loading indicator. If loading is true...*/}\n                    {loading ? (\n                        //Show the loading screen\n                        <Dimmer active inverted>\n                            <Loader inverted> LOADING...</Loader>\n                        </Dimmer>\n                    ) : (\n                        //Else, access the switch\n                        <Switch>\n                            {/*Route to home component*/}\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                            {/*Route to people component,pass in classes as props*/}\n                            <Route exact path=\"/monster\">\n                                <Monster data={monster} />\n                            </Route>\n                            {/*Route to classes component*/}\n                            <Route exact path=\"/classes\">\n                                <Classes data={classes} />\n                            </Route>\n                        </Switch>\n                    )}\n                </Container>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}